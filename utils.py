from pathlib import Path
from scapy.layers.dns import DNS
from scapy.layers.inet import TCP
from scapy.packet import Padding
from scapy.utils import rdpcap

# for malware tyoe identification
MALWARE_ID = {
    "2015":0,
    "2016":0,
    "2017":0,
    "Youmi":1,  #Adware
    "Mobidash":1,
    "Shuanet":1,
    "koodous":1,
    "Ewind":1,
    "Gooligan":1,
    "Feiwo":1,
    "Dowgin":1,
    "Selfmite":1,
    "Kemoge":1,
    "jifake":2, #SMSMalware
    "plankton":2,
    "Nandrobox":2,
    "zsone":2,
    "fakemart":2,
    "Biige":2,
    "mazarbot":2,
    "smssniffer":2,
    "Beanbot":2,
    "fakenotify":2,
    "fakeinst":2,
    "AVpass":3,  #Scareware
    "AVforandroid":3,
    "FakeAV":3,
    "FakeApp.AL":3,
    "FakeTaoBao":3,
    "Penetho":3,
    "FakeApp":3,
    "FakeJobOffer":3,
    "AndroidSpy.277":3,
    "VirusShield":3,
    "AndroidDefender":3,
    "Koler":4, #Ransomware
    "Svpeng":4,
    "RansomBO":4,
    "Simplocker":4,
    "WannaLocker":4,
    "LockerPin":4,
    "Jisut":4,
    "Charger":4,
    "PornDroid":4,
    "Pletor":4
}

ID_TO_TYPE = {
    0: 'WannaCry',
    1: 'Trickbot',
    2: 'Razy',
    3: 'PUA.Taobao',
    4: 'HPEMOTET',
    5: 'Heuristic',
    6: 'Emotet',
    7: 'Dridex',
    8: 'CCleaner',
    9: 'Bunitu',
    10: 'Neris'
}

# for traffic identification
TRAFFIC_IDENTIFICATION_ID = {
    "2015":0,
    "2016":0,
    "2017":0,
    "Youmi":1,
    "Mobidash":1,
    "Shuanet":1,
    "koodous":1,
    "Ewind":1,
    "Gooligan":1,
    "Feiwo":1,
    "Dowgin":1,
    "Selfmite":1,
    "Kemoge":1,
    "jifake":1,
    "plankton":1,
    "Nandrobox":1,
    "zsone":1,
    "fakemart":1,
    "Biige":1,
    "mazarbot":1,
    "smssniffer":1,
    "Beanbot":1,
    "fakenotify":1,
    "fakeinst":1,
    "AVpass":1,
    "AVforandroid":1,
    "FakeAV":1,
    "FakeApp.AL":1,
    "FakeTaoBao":1,
    "Penetho":1,
    "FakeApp":1,
    "FakeJobOffer":1,
    "AndroidSpy.277":1,
    "VirusShield":1,
    "AndroidDefender":1,
    "Koler":1,
    "Svpeng":1,
    "RansomBO":1,
    "Simplocker":1,
    "WannaLocker":1,
    "LockerPin":1,
    "Jisut":1,
    "Charger":1,
    "PornDroid":1,
    "Pletor":1
}

ID_TO_IDENTIDICATION_TYPE= {
    0: 'normal',
    1: 'malicious'
}


def read_pcap(path: Path):
    packets = rdpcap(str(path))
    return packets


def should_omit_packet(packet):
    # SYN, ACK or FIN flags set to 1 and no payload
    if TCP in packet and (packet.flags & 0x13):
        # not payload or contains only padding
        layers = packet[TCP].payload.layers()
        if not layers or (Padding in layers and len(layers) == 1):
            return True

    # DNS segment
    if DNS in packet:
        return True

    return False
